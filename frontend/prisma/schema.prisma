// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  freeTierUser
  proTierUser
  enterpriseTierUser
}

model User {
  id                    String    @id @default(cuid())
  name                  String
  email                 String    @unique
  image                 String?
  password              String?
  emailVerified         String?
  accounts              Account[]
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  credits               Int       @default(25)
  lastCreditRefresh     DateTime  @default(now())
  nextCreditRefresh     DateTime  @default(now())
  userType              String    @default("freeTierUser")
  creditRefreshInterval Int       @default(1) // Default 1 day for free tier
  maxCredits            Int       @default(25) // Default max credits

  @@index([lastCreditRefresh])
  @@index([nextCreditRefresh])
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}
